import unittest
import sys,os

dir_path = os.path.dirname(os.path.realpath(__file__)) #path to file
parent_dir = os.path.abspath(os.path.join(dir_path, os.pardir)) #path to parent dir of file
src_path = parent_dir+'/src/'
sys.path.insert(0,src_path)

from circuit import circuit

#unit test docs https://docs.python.org/3/library/unittest.html#unittest.TestCase.debug
#run on terminal with python -m unittest test_circuit.py
#or if unittest.main() (see below) to just run python3 test_circuit.py

class test_circuit(unittest.TestCase):

    def test_setSolver(self):
        """
        ckt1 = circuit()
        ckt1.makeCkt("t4_21.ckt")
        print ("*----------------------------------------*\n*========================================*")

        self.assertEqual(ckt1.setSolver("10gat",0)[1], [1,1,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver("10gat",1)[1], [0,0,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver("8gat",0)[1], [1,0,1,0,1])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver("8gat",1)[1], [1,1,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver("7gat",0)[1], [0,0,1,1,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver("7gat",1)[1], [1,1,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver("6gat",0)[1], [0,0,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver("6gat",1)[1], [1,1,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver("5gat",0)[1], [1,1,0,0,1])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver("5gat",1)[1], [1,1,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver("4gat",0)[1], [0,0,1,1,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver("4gat",1)[1], [0,0,1,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver("3gat",0)[1], [0,1,1,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver("3gat",1)[1], [0,1,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver("2gat",0)[1], [1,1,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver("2gat",1)[1], [1,0,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver("1gat",0)[1], [1,1,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver("1gat",1)[1], [0,1,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver(["6gat","3gat"],0)[1], [0,0,1,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver(["6gat","3gat"],1)[1], [0,0,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver(["7gat","3gat"],0)[1], [0,0,1,1,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt1.setSolver(["7gat","3gat"],1)[1], [1,1,0,1,0])
        print ("----------------------------------------\n========================================")


        ckt2 = circuit()
        ckt2.makeCkt("t4_3.ckt")
        print ("*----------------------------------------*\n*========================================*")

        self.assertEqual(ckt2.setSolver("8gat",0)[1], [0,0,0,1])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt2.setSolver("8gat",1)[1], [0,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt2.setSolver("7gat",0)[1], [1,0,1,0])       # missing last input
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt2.setSolver("7gat",1)[1], [0,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt2.setSolver("6gat",0)[1], [0,0,0,1])
        print ("----------------------------------------\n========================================")
 
        self.assertEqual(ckt2.setSolver("6gat",1)[1], [1,0,0,1])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt2.setSolver("5gat",0)[1], [1,0,1,0])       # missing last input #fixed
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt2.setSolver("5gat",1)[1], [1,0,0,0])       # missing last input #fixed
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt2.setSolver("4gat",0)[1], [0,0,0,1])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt2.setSolver("4gat",1)[1], [0,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt2.setSolver("3gat",0)[1], [1,0,1,0])       # missing last input #fixed
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt2.setSolver("3gat",1)[1], [1,0,0,0])       # missing last input #fixed
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt2.setSolver("2gat",0)[1], [1,1,0,0])       # missing last input #fixed
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt2.setSolver("2gat",1)[1], [1,0,0,0])       # missing last input #fixed
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt2.setSolver("1gat",0)[1], [1,0,1,0])       # missing last input #fixed
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt2.setSolver("1gat",1)[1], [0,0,1,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt2.setSolver(["7gat","1gat"],0)[1], [1,0,1,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt2.setSolver(["7gat","1gat"],1)[1], [0,0,1,0])
        print ("----------------------------------------\n========================================")
        
        self.assertEqual(ckt2.setSolver(["6gat","1gat"],0)[1], [0,0,0,1])        #Not gate fan out
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt2.setSolver(["6gat","1gat"],1)[1], [1,0,0,1])        #Not gate fan out
        print ("----------------------------------------\n========================================")


        ckt3 = circuit()
        ckt3.makeCkt("t5_10.ckt")
        print ("*----------------------------------------*\n*========================================*")

        self.assertEqual(ckt3.setSolver("fgat",0)[1], [1,1,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver("fgat",1)[1], [0,0,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver("kgat",0)[1], [1,0,1,0,1])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver("kgat",1)[1], [1,1,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver("igat",0)[1], [0,0,1,1,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver("igat",1)[1], [1,1,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver("jgat",0)[1], [0,0,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver("jgat",1)[1], [1,1,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver("egat",0)[1], [1,1,0,0,1])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver("egat",1)[1], [1,1,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver("dgat",0)[1], [0,0,1,1,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver("dgat",1)[1], [0,0,1,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver("cgat",0)[1], [0,1,1,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver("cgat",1)[1], [0,1,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver("bgat",0)[1], [1,1,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver("bgat",1)[1], [1,0,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver("agat",0)[1], [1,1,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver("agat",1)[1], [0,1,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver(["jgat","cgat"],0)[1], [0,0,1,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver(["jgat","cgat"],1)[1], [0,0,0,0,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver(["igat","cgat"],0)[1], [0,0,1,1,0])
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt3.setSolver(["igat","cgat"],1)[1], [1,1,0,1,0])
        print ("----------------------------------------\n========================================")

        """
        ckt4 = circuit()
        ckt4.makeCkt("t5_26a.ckt")
        # x = 1, y = 2, c = 3
        # 11 = (3 & 1 & 2) | (3 & ~1 & ~2) | ( ~3 & 1 & ~2) | ( ~3 & ~1 & 2)
        print ("*----------------------------------------*\n*========================================*")

        # self.assertEqual(ckt4.setSolver("10gat",0)[1], [x,x,x])      #V
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("10gat",1)[1], [0,x,x])      #V
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("Ugat",0)[1], [x,x,x])      #U
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("Ugat",1)[1], [1,x,x])      #U
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("Tgat",0)[1], [x,x,x])      #T
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("Tgat",1)[1], [1,x,x])      #T
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["T1gat","Tgat"],0)[1], [x,x,x])      #T1
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["T1gat","Tgat"],1)[1], [1,x,x])      #T1
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["T2gat","Tgat"],0)[1], [x,x,x])      #T2
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["T2gat","Tgat"],1)[1], [x,x,x])      #T2
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["T3gat","Tgat"],0)[1], [x,x,x])      #T3
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["T3gat","Tgat"],1)[1], [x,x,x])      #T3
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("Rgat",0)[1], [x,x,x])      #R
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("Rgat",1)[1], [x,x,x])      #R
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("Qgat",0)[1], [x,x,x])      #Q
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("Qgat",1)[1], [x,x,x])      #Q
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("Ngat",0)[1], [x,x,x])      #N
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("Ngat",1)[1], [x,x,x])      #N
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["N1gat","Ngat"],0)[1], [x,x,x])      #N1
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["N1gat","Ngat"],1)[1], [1,x,x])      #N1
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["N2gat","Ngat"],0)[1], [x,x,x])      #N2
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["N2gat","Ngat"],1)[1], [x,x,x])      #N2
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("Lgat",0)[1], [x,x,x])      #L
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("Lgat",1)[1], [1,x,x])      #L
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["L1gat","Lgat"],0)[1], [x,x,x])      #L1
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["L1gat","Lgat"],1)[1], [1,x,x])      #L1
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["L2gat","Lgat"],0)[1], [x,x,x])      #L2
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["L2gat","Lgat"],1)[1], [x,x,x])      #L2
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["L3gat","Lgat"],0)[1], [x,x,x])      #L3
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["L3gat","Lgat"],1)[1], [x,x,x])      #L3
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("CIgat",0)[1], [x,x,x])      #CI
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("CIgat",1)[1], [x,x,x])      #CI
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["CI1gat","CIgat"],0)[1], [x,x,x])      #CI1
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["CI1gat","CIgat"],1)[1], [1,x,x])      #CI1
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["CI2gat","CIgat"],0)[1], [x,x,x])      #CI2
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["CI2gat","CIgat"],1)[1], [x,x,x])      #CI2
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("Ygat",0)[1], [x,x,x])      #Y
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("Ygat",1)[1], [x,x,x])      #Y
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["Y1gat","Ygat"],0)[1], [x,x,x])      #Y1
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["Y1gat","Ygat"],1)[1], [1,x,x])      #Y1
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["Y2gat","Ygat"],0)[1], [x,x,x])      #Y2
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["Y2gat","Ygat"],1)[1], [x,x,x])      #Y2
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("Xgat",0)[1], [x,x,x])      #X
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver("Xgat",1)[1], [x,x,x])      #X
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["X1gat","Xgat"],0)[1], [x,x,x])      #X1
        # print ("----------------------------------------\n========================================")

        # self.assertEqual(ckt4.setSolver(["X1gat","Xgat"],1)[1], [1,x,x])      #X1
        # print ("----------------------------------------\n========================================")

        self.assertEqual(ckt4.setSolver(["6gat","1gat"],0)[1], [1,0,"x"])      #X2
        print ("----------------------------------------\n========================================")

        self.assertEqual(ckt4.setSolver(["6gat","1gat"],1)[1], [0,0,1])      #X2
        print ("----------------------------------------\n========================================")
        


if __name__ == '__main__':
    unittest.main(exit=False)